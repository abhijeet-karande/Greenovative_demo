# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import emp_pb2 as emp__pb2


class EmployeesServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddEmp = channel.unary_unary(
                '/EmployeesService/AddEmp',
                request_serializer=emp__pb2.AddRequest.SerializeToString,
                response_deserializer=emp__pb2.AddResponse.FromString,
                )
        self.ReadEmp = channel.unary_unary(
                '/EmployeesService/ReadEmp',
                request_serializer=emp__pb2.ReadRequest.SerializeToString,
                response_deserializer=emp__pb2.ReadResponse.FromString,
                )
        self.UpdateEmp = channel.unary_unary(
                '/EmployeesService/UpdateEmp',
                request_serializer=emp__pb2.UpdateRequest.SerializeToString,
                response_deserializer=emp__pb2.UpdateResponse.FromString,
                )
        self.DeleteEmp = channel.unary_unary(
                '/EmployeesService/DeleteEmp',
                request_serializer=emp__pb2.DeleteRequest.SerializeToString,
                response_deserializer=emp__pb2.DeleteResponse.FromString,
                )


class EmployeesServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddEmp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadEmp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEmp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEmp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EmployeesServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddEmp': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEmp,
                    request_deserializer=emp__pb2.AddRequest.FromString,
                    response_serializer=emp__pb2.AddResponse.SerializeToString,
            ),
            'ReadEmp': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadEmp,
                    request_deserializer=emp__pb2.ReadRequest.FromString,
                    response_serializer=emp__pb2.ReadResponse.SerializeToString,
            ),
            'UpdateEmp': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEmp,
                    request_deserializer=emp__pb2.UpdateRequest.FromString,
                    response_serializer=emp__pb2.UpdateResponse.SerializeToString,
            ),
            'DeleteEmp': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEmp,
                    request_deserializer=emp__pb2.DeleteRequest.FromString,
                    response_serializer=emp__pb2.DeleteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'EmployeesService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EmployeesService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddEmp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeesService/AddEmp',
            emp__pb2.AddRequest.SerializeToString,
            emp__pb2.AddResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadEmp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeesService/ReadEmp',
            emp__pb2.ReadRequest.SerializeToString,
            emp__pb2.ReadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateEmp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeesService/UpdateEmp',
            emp__pb2.UpdateRequest.SerializeToString,
            emp__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteEmp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/EmployeesService/DeleteEmp',
            emp__pb2.DeleteRequest.SerializeToString,
            emp__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
